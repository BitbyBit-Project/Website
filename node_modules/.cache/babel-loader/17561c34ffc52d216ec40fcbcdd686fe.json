{"ast":null,"code":"import axios from \"axios\";\nexport const callExternalApi = async options => {\n  try {\n    const response = await axios(options.config);\n    const {\n      data\n    } = response;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      const axiosError = error;\n      const {\n        response\n      } = axiosError;\n      let message = \"http request failed\";\n\n      if (response && response.statusText) {\n        message = response.statusText;\n      }\n\n      if (axiosError.message) {\n        message = axiosError.message;\n      }\n\n      if (response && response.data && response.data.message) {\n        message = response.data.message;\n      }\n\n      return {\n        data: null,\n        error: {\n          message\n        }\n      };\n    }\n\n    return {\n      data: null,\n      error: {\n        message: error.message\n      }\n    };\n  }\n};","map":{"version":3,"names":["axios","callExternalApi","options","response","config","data","error","isAxiosError","axiosError","message","statusText"],"sources":["C:/Users/mekia/Documents/GitHub/Nursing VR Website/src/services/external-api.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const callExternalApi = async (options) => {\r\n  try {\r\n    const response = await axios(options.config);\r\n    const { data } = response;\r\n\r\n    return {\r\n      data,\r\n      error: null,\r\n    };\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      const axiosError = error;\r\n\r\n      const { response } = axiosError;\r\n\r\n      let message = \"http request failed\";\r\n\r\n      if (response && response.statusText) {\r\n        message = response.statusText;\r\n      }\r\n\r\n      if (axiosError.message) {\r\n        message = axiosError.message;\r\n      }\r\n\r\n      if (response && response.data && response.data.message) {\r\n        message = response.data.message;\r\n      }\r\n\r\n      return {\r\n        data: null,\r\n        error: {\r\n          message,\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      data: null,\r\n      error: {\r\n        message: error.message,\r\n      },\r\n    };\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAOC,OAAP,IAAmB;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACE,OAAO,CAACE,MAAT,CAA5B;IACA,MAAM;MAAEC;IAAF,IAAWF,QAAjB;IAEA,OAAO;MACLE,IADK;MAELC,KAAK,EAAE;IAFF,CAAP;EAID,CARD,CAQE,OAAOA,KAAP,EAAc;IACd,IAAIN,KAAK,CAACO,YAAN,CAAmBD,KAAnB,CAAJ,EAA+B;MAC7B,MAAME,UAAU,GAAGF,KAAnB;MAEA,MAAM;QAAEH;MAAF,IAAeK,UAArB;MAEA,IAAIC,OAAO,GAAG,qBAAd;;MAEA,IAAIN,QAAQ,IAAIA,QAAQ,CAACO,UAAzB,EAAqC;QACnCD,OAAO,GAAGN,QAAQ,CAACO,UAAnB;MACD;;MAED,IAAIF,UAAU,CAACC,OAAf,EAAwB;QACtBA,OAAO,GAAGD,UAAU,CAACC,OAArB;MACD;;MAED,IAAIN,QAAQ,IAAIA,QAAQ,CAACE,IAArB,IAA6BF,QAAQ,CAACE,IAAT,CAAcI,OAA/C,EAAwD;QACtDA,OAAO,GAAGN,QAAQ,CAACE,IAAT,CAAcI,OAAxB;MACD;;MAED,OAAO;QACLJ,IAAI,EAAE,IADD;QAELC,KAAK,EAAE;UACLG;QADK;MAFF,CAAP;IAMD;;IAED,OAAO;MACLJ,IAAI,EAAE,IADD;MAELC,KAAK,EAAE;QACLG,OAAO,EAAEH,KAAK,CAACG;MADV;IAFF,CAAP;EAMD;AACF,CA5CM"},"metadata":{},"sourceType":"module"}