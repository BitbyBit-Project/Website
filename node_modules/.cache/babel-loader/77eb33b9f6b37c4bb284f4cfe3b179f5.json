{"ast":null,"code":"import _slicedToArray from \"C:/Users/mekia/Documents/GitHub/Nursing VR Website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nimport useLatest from '../utils/useLatest';\nimport useTextNavigation from '../utils/useTextNavigation';\n\nvar defaultOptionComparer = function defaultOptionComparer(optionA, optionB) {\n  return optionA === optionB;\n};\n\nvar defaultIsOptionDisabled = function defaultIsOptionDisabled() {\n  return false;\n};\n\nvar defaultOptionStringifier = function defaultOptionStringifier(option) {\n  return typeof option === 'string' ? option : String(option);\n};\n/**\n * @ignore - do not document.\n */\n\n\nexport default function useListbox(props) {\n  var _props$optionIdGenera;\n\n  var _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$focusManagemen = props.focusManagement,\n      focusManagement = _props$focusManagemen === void 0 ? 'activeDescendant' : _props$focusManagemen,\n      idProp = props.id,\n      _props$isOptionDisabl = props.isOptionDisabled,\n      isOptionDisabled = _props$isOptionDisabl === void 0 ? defaultIsOptionDisabled : _props$isOptionDisabl,\n      externalListboxRef = props.listboxRef,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$optionComparer = props.optionComparer,\n      optionComparer = _props$optionComparer === void 0 ? defaultOptionComparer : _props$optionComparer,\n      _props$optionStringif = props.optionStringifier,\n      optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n      options = props.options,\n      externalReducer = props.stateReducer,\n      valueParam = props.value;\n  var id = useId(idProp);\n  var defaultIdGenerator = React.useCallback(function (_, index) {\n    return \"\".concat(id, \"-option-\").concat(index);\n  }, [id]);\n  var optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  var propsWithDefaults = useLatest(_extends({}, props, {\n    disabledItemsFocusable: disabledItemsFocusable,\n    disableListWrap: disableListWrap,\n    focusManagement: focusManagement,\n    isOptionDisabled: isOptionDisabled,\n    multiple: multiple,\n    optionComparer: optionComparer,\n    optionStringifier: optionStringifier\n  }), [props]);\n  var listboxRef = React.useRef(null);\n  var handleRef = useForkRef(externalListboxRef, listboxRef);\n\n  var _useControllableReduc = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults),\n      _useControllableReduc2 = _slicedToArray(_useControllableReduc, 2),\n      _useControllableReduc3 = _useControllableReduc2[0],\n      highlightedValue = _useControllableReduc3.highlightedValue,\n      selectedValue = _useControllableReduc3.selectedValue,\n      dispatch = _useControllableReduc2[1];\n\n  var handleTextNavigation = useTextNavigation(function (searchString, event) {\n    return dispatch({\n      type: ActionTypes.textNavigation,\n      event: event,\n      searchString: searchString\n    });\n  });\n  React.useEffect(function () {\n    // if a controlled value changes, we need to update the state to keep things in sync\n    if (valueParam !== undefined && valueParam !== selectedValue) {\n      dispatch({\n        type: ActionTypes.setValue,\n        event: null,\n        value: valueParam\n      });\n    }\n  }, [valueParam, selectedValue, dispatch]);\n  var highlightedIndex = React.useMemo(function () {\n    return highlightedValue == null ? -1 : options.findIndex(function (option) {\n      return optionComparer(option, highlightedValue);\n    });\n  }, [highlightedValue, options, optionComparer]); // introducing refs to avoid recreating the getOptionState function on each change.\n\n  var latestSelectedValue = useLatest(selectedValue);\n  var latestHighlightedIndex = useLatest(highlightedIndex);\n  var previousOptions = React.useRef([]);\n  React.useEffect(function () {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options: options,\n      previousOptions: previousOptions.current\n    });\n    previousOptions.current = options;\n  }, [options, optionComparer, dispatch]);\n  var setSelectedValue = React.useCallback(function (option) {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: option\n    });\n  }, [dispatch]);\n  var setHighlightedValue = React.useCallback(function (option) {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n  var createHandleOptionClick = React.useCallback(function (option, other) {\n    return function (event) {\n      var _other$onClick;\n\n      (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: ActionTypes.optionClick,\n        option: option,\n        event: event\n      });\n    };\n  }, [dispatch]);\n  var createHandleOptionPointerOver = React.useCallback(function (option, other) {\n    return function (event) {\n      var _other$onMouseOver;\n\n      (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: ActionTypes.optionHover,\n        option: option,\n        event: event\n      });\n    };\n  }, [dispatch]);\n\n  var createHandleKeyDown = function createHandleKeyDown(other) {\n    return function (event) {\n      var _other$onKeyDown;\n\n      (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      var keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n\n      if (focusManagement === 'activeDescendant') {\n        // When the child element is focused using the activeDescendant attribute,\n        // the listbox handles keyboard events on its behalf.\n        // We have to `preventDefault()` is this case to prevent the browser from\n        // scrolling the view when space is pressed or submitting forms when enter is pressed.\n        keysToPreventDefault.push(' ', 'Enter');\n      }\n\n      if (keysToPreventDefault.includes(event.key)) {\n        event.preventDefault();\n      }\n\n      dispatch({\n        type: ActionTypes.keyDown,\n        event: event\n      });\n      handleTextNavigation(event);\n    };\n  };\n\n  var createHandleBlur = function createHandleBlur(other) {\n    return function (event) {\n      var _other$onBlur, _listboxRef$current;\n\n      (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n        // focus is within the listbox\n        return;\n      }\n\n      dispatch({\n        type: ActionTypes.blur,\n        event: event\n      });\n    };\n  };\n\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id: id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n\n  var getOptionState = React.useCallback(function (option) {\n    var selected;\n    var index = options.findIndex(function (opt) {\n      return optionComparer(opt, option);\n    });\n\n    if (multiple) {\n      var _ref;\n\n      selected = ((_ref = latestSelectedValue.current) != null ? _ref : []).some(function (value) {\n        return value != null && optionComparer(option, value);\n      });\n    } else {\n      selected = optionComparer(option, latestSelectedValue.current);\n    }\n\n    var disabled = isOptionDisabled(option, index);\n    var highlighted = latestHighlightedIndex.current === index && index !== -1;\n    return {\n      disabled: disabled,\n      highlighted: highlighted,\n      index: index,\n      selected: selected\n    };\n  }, [options, multiple, isOptionDisabled, optionComparer, latestSelectedValue, latestHighlightedIndex]);\n  var getOptionTabIndex = React.useCallback(function (optionState) {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n\n    if (!optionState.highlighted) {\n      return -1;\n    }\n\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n\n    return 0;\n  }, [focusManagement, disabledItemsFocusable]);\n  var getOptionProps = React.useCallback(function (option) {\n    var otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var optionState = getOptionState(option);\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, optionState.index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  }, [optionIdGenerator, createHandleOptionClick, createHandleOptionPointerOver, getOptionTabIndex, getOptionState]);\n  React.useDebugValue({\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps: getRootProps,\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue,\n    setSelectedValue: setSelectedValue,\n    setHighlightedValue: setHighlightedValue\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","ActionTypes","defaultReducer","useControllableReducer","areArraysEqual","useLatest","useTextNavigation","defaultOptionComparer","optionA","optionB","defaultIsOptionDisabled","defaultOptionStringifier","option","String","useListbox","props","_props$optionIdGenera","disabledItemsFocusable","disableListWrap","focusManagement","idProp","id","isOptionDisabled","externalListboxRef","listboxRef","multiple","optionComparer","optionStringifier","options","externalReducer","stateReducer","valueParam","value","defaultIdGenerator","useCallback","_","index","optionIdGenerator","propsWithDefaults","useRef","handleRef","highlightedValue","selectedValue","dispatch","handleTextNavigation","searchString","event","type","textNavigation","useEffect","undefined","setValue","highlightedIndex","useMemo","findIndex","latestSelectedValue","latestHighlightedIndex","previousOptions","current","optionsChange","setSelectedValue","setHighlightedValue","setHighlight","highlight","createHandleOptionClick","other","_other$onClick","onClick","call","defaultPrevented","preventDefault","optionClick","createHandleOptionPointerOver","_other$onMouseOver","onMouseOver","optionHover","createHandleKeyDown","_other$onKeyDown","onKeyDown","keysToPreventDefault","push","includes","key","keyDown","createHandleBlur","_other$onBlur","_listboxRef$current","onBlur","contains","document","activeElement","blur","getRootProps","otherHandlers","role","tabIndex","ref","getOptionState","selected","opt","_ref","some","disabled","highlighted","getOptionTabIndex","optionState","getOptionProps","onPointerOver","useDebugValue","highlightedOption","selectedOption"],"sources":["C:/Users/mekia/Documents/GitHub/Nursing VR Website/node_modules/@mui/base/useListbox/useListbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nimport useLatest from '../utils/useLatest';\nimport useTextNavigation from '../utils/useTextNavigation';\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsOptionDisabled = () => false;\nconst defaultOptionStringifier = option => typeof option === 'string' ? option : String(option);\n\n/**\n * @ignore - do not document.\n */\nexport default function useListbox(props) {\n  var _props$optionIdGenera;\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    multiple = false,\n    optionComparer = defaultOptionComparer,\n    optionStringifier = defaultOptionStringifier,\n    options,\n    stateReducer: externalReducer,\n    value: valueParam\n  } = props;\n  const id = useId(idProp);\n  const defaultIdGenerator = React.useCallback((_, index) => `${id}-option-${index}`, [id]);\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  const propsWithDefaults = useLatest(_extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    multiple,\n    optionComparer,\n    optionStringifier\n  }), [props]);\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const [{\n    highlightedValue,\n    selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n  React.useEffect(() => {\n    // if a controlled value changes, we need to update the state to keep things in sync\n    if (valueParam !== undefined && valueParam !== selectedValue) {\n      dispatch({\n        type: ActionTypes.setValue,\n        event: null,\n        value: valueParam\n      });\n    }\n  }, [valueParam, selectedValue, dispatch]);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n\n  // introducing refs to avoid recreating the getOptionState function on each change.\n  const latestSelectedValue = useLatest(selectedValue);\n  const latestHighlightedIndex = useLatest(highlightedIndex);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options,\n      previousOptions: previousOptions.current\n    });\n    previousOptions.current = options;\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: option\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n  const createHandleOptionClick = React.useCallback((option, other) => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleOptionPointerOver = React.useCallback((option, other) => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the listbox handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ActionTypes.keyDown,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n    dispatch({\n      type: ActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n  const getOptionState = React.useCallback(option => {\n    let selected;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    if (multiple) {\n      var _ref;\n      selected = ((_ref = latestSelectedValue.current) != null ? _ref : []).some(value => value != null && optionComparer(option, value));\n    } else {\n      selected = optionComparer(option, latestSelectedValue.current);\n    }\n    const disabled = isOptionDisabled(option, index);\n    const highlighted = latestHighlightedIndex.current === index && index !== -1;\n    return {\n      disabled,\n      highlighted,\n      index,\n      selected\n    };\n  }, [options, multiple, isOptionDisabled, optionComparer, latestSelectedValue, latestHighlightedIndex]);\n  const getOptionTabIndex = React.useCallback(optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n    if (!optionState.highlighted) {\n      return -1;\n    }\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n    return 0;\n  }, [focusManagement, disabledItemsFocusable]);\n  const getOptionProps = React.useCallback((option, otherHandlers = {}) => {\n    const optionState = getOptionState(option);\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, optionState.index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  }, [optionIdGenerator, createHandleOptionClick, createHandleOptionPointerOver, getOptionTabIndex, getOptionState]);\n  React.useDebugValue({\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}